# NexusTradeAI Application Deployment with HPA
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexustrade-app
  namespace: nexustrade
  labels:
    app: nexustrade-ai
    component: application
    tier: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: nexustrade-ai
      component: application
  template:
    metadata:
      labels:
        app: nexustrade-ai
        component: application
        tier: backend
    spec:
      containers:
      - name: nexustrade-app
        image: nexustrade-ai:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        env:
        # Import configuration from ConfigMap
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: nexustrade-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: nexustrade-config
              key: PORT
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: nexustrade-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: nexustrade-config
              key: REDIS_PORT
        - name: CLUSTER_ENABLED
          valueFrom:
            configMapKeyRef:
              name: nexustrade-config
              key: CLUSTER_ENABLED
        - name: CIRCUIT_BREAKER_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: nexustrade-config
              key: CIRCUIT_BREAKER_TIMEOUT
        - name: CACHE_TTL_SECONDS
          valueFrom:
            configMapKeyRef:
              name: nexustrade-config
              key: CACHE_TTL_SECONDS
        # Import secrets
        - name: ALPHA_VANTAGE_API_KEY
          valueFrom:
            secretKeyRef:
              name: nexustrade-secrets
              key: ALPHA_VANTAGE_API_KEY
        - name: POLYGON_API_KEY
          valueFrom:
            secretKeyRef:
              name: nexustrade-secrets
              key: POLYGON_API_KEY
        - name: BYBIT_API_KEY
          valueFrom:
            secretKeyRef:
              name: nexustrade-secrets
              key: BYBIT_API_KEY
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nexustrade-secrets
              key: REDIS_PASSWORD
              optional: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - "sleep 10"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: nexustrade-service
  namespace: nexustrade
  labels:
    app: nexustrade-ai
    component: application
    tier: backend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: nexustrade-ai
    component: application
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nexustrade-hpa
  namespace: nexustrade
  labels:
    app: nexustrade-ai
    component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nexustrade-app
  minReplicas: 3
  maxReplicas: 50
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 5
        periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      selectPolicy: Min