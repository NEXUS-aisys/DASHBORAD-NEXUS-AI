# AWS CloudFront CDN Deployment Configuration
# Phase 4.2: Global Static Asset Distribution

apiVersion: v1
kind: ConfigMap
metadata:
  name: cdn-config
  namespace: nexustrade-ai
data:
  # CDN Configuration
  distribution_config: |
    Distribution:
      DistributionConfig:
        CallerReference: "nexustrade-ai-cdn-$(date +%s)"
        Comment: "NexusTradeAI Global CDN Distribution"
        
        # Origin Configuration
        Origins:
          Items:
            - Id: "nexustrade-s3-origin"
              DomainName: "nexustrade-ai-static.s3.amazonaws.com"
              S3OriginConfig:
                OriginAccessIdentity: ""
            - Id: "nexustrade-api-origin"
              DomainName: "api.nexustradeai.com"
              CustomOriginConfig:
                HTTPPort: 443
                HTTPSPort: 443
                OriginProtocolPolicy: "https-only"
                OriginSSLProtocols:
                  Items: ["TLSv1.2"]
          
        # Cache Behaviors
        DefaultCacheBehavior:
          TargetOriginId: "nexustrade-s3-origin"
          ViewerProtocolPolicy: "redirect-to-https"
          CachePolicyId: "4135ea2d-6df8-44a3-9df3-4b5a84be39ad"  # Managed-CachingOptimized
          Compress: true
          
        CacheBehaviors:
          Items:
            # API Requests - No Caching
            - PathPattern: "/api/*"
              TargetOriginId: "nexustrade-api-origin"
              ViewerProtocolPolicy: "https-only"
              CachePolicyId: "4135ea2d-6df8-44a3-9df3-4b5a84be39ad"
              OriginRequestPolicyId: "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf"
              TTL: 0
              
            # Static Assets - Long Cache
            - PathPattern: "/assets/*"
              TargetOriginId: "nexustrade-s3-origin"
              ViewerProtocolPolicy: "redirect-to-https"
              CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6"  # Managed-CachingOptimizedForUncompressedObjects
              DefaultTTL: 31536000  # 1 year
              MaxTTL: 31536000
              
            # JavaScript/CSS - Medium Cache
            - PathPattern: "*.js"
              TargetOriginId: "nexustrade-s3-origin"
              ViewerProtocolPolicy: "redirect-to-https"
              CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6"
              DefaultTTL: 86400  # 1 day
              MaxTTL: 2592000   # 30 days
              
            - PathPattern: "*.css"
              TargetOriginId: "nexustrade-s3-origin"
              ViewerProtocolPolicy: "redirect-to-https"
              CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6"
              DefaultTTL: 86400  # 1 day
              MaxTTL: 2592000   # 30 days
              
            # Images - Long Cache
            - PathPattern: "*.png"
              TargetOriginId: "nexustrade-s3-origin"
              ViewerProtocolPolicy: "redirect-to-https"
              CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6"
              DefaultTTL: 2592000  # 30 days
              MaxTTL: 31536000    # 1 year
              
        # Custom Error Pages
        CustomErrorResponses:
          Items:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: "/index.html"
              ErrorCachingMinTTL: 300
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: "/index.html"
              ErrorCachingMinTTL: 300
              
        # Geographic Restrictions
        Restrictions:
          GeoRestriction:
            RestrictionType: "none"
            
        # SSL Configuration
        ViewerCertificate:
          CloudFrontDefaultCertificate: false
          AcmCertificateArn: "arn:aws:acm:us-east-1:ACCOUNT:certificate/CERT-ID"
          SslSupportMethod: "sni-only"
          MinimumProtocolVersion: "TLSv1.2_2021"
          
        # Aliases
        Aliases:
          Items:
            - "cdn.nexustradeai.com"
            - "assets.nexustradeai.com"
            
        # Logging
        Logging:
          Bucket: "nexustrade-cdn-logs.s3.amazonaws.com"
          IncludeCookies: false
          Prefix: "cloudfront-logs/"
          
        # Performance Settings
        Enabled: true
        PriceClass: "PriceClass_All"  # Global edge locations
        HttpVersion: "http2"
        IsIPV6Enabled: true
        
  # S3 Bucket Configuration
  s3_config: |
    BucketName: "nexustrade-ai-static"
    Region: "us-east-1"
    PublicAccessBlock:
      BlockPublicAcls: true
      BlockPublicPolicy: false
      IgnorePublicAcls: true
      RestrictPublicBuckets: false
    WebsiteConfiguration:
      IndexDocument:
        Suffix: "index.html"
      ErrorDocument:
        Key: "index.html"
    CorsConfiguration:
      CorsRules:
        - AllowedHeaders: ["*"]
          AllowedMethods: ["GET", "HEAD"]
          AllowedOrigins: 
            - "https://nexustradeai.com"
            - "https://www.nexustradeai.com"
            - "https://cdn.nexustradeai.com"
          MaxAgeSeconds: 86400
          
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cdn-deployment-job
  namespace: nexustrade-ai
spec:
  template:
    spec:
      containers:
      - name: cdn-deployer
        image: amazon/aws-cli:latest
        env:
        - name: AWS_DEFAULT_REGION
          value: "us-east-1"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: secret-access-key
        command:
        - /bin/sh
        - -c
        - |
          # Create S3 bucket for static assets
          aws s3 mb s3://nexustrade-ai-static --region us-east-1 || true
          
          # Configure S3 bucket for static website hosting
          aws s3 website s3://nexustrade-ai-static --index-document index.html --error-document index.html
          
          # Set bucket policy for CloudFront access
          cat > bucket-policy.json << EOF
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "PublicReadGetObject",
                "Effect": "Allow",
                "Principal": "*",
                "Action": "s3:GetObject",
                "Resource": "arn:aws:s3:::nexustrade-ai-static/*"
              }
            ]
          }
          EOF
          
          aws s3api put-bucket-policy --bucket nexustrade-ai-static --policy file://bucket-policy.json
          
          # Enable CORS
          cat > cors.json << EOF
          {
            "CORSRules": [
              {
                "AllowedHeaders": ["*"],
                "AllowedMethods": ["GET", "HEAD"],
                "AllowedOrigins": [
                  "https://nexustradeai.com",
                  "https://www.nexustradeai.com",
                  "https://cdn.nexustradeai.com"
                ],
                "MaxAgeSeconds": 86400
              }
            ]
          }
          EOF
          
          aws s3api put-bucket-cors --bucket nexustrade-ai-static --cors-configuration file://cors.json
          
          echo "S3 bucket configuration completed"
          
      restartPolicy: OnFailure
  backoffLimit: 3

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-sync-deployment
  namespace: nexustrade-ai
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cdn-sync
  template:
    metadata:
      labels:
        app: cdn-sync
    spec:
      containers:
      - name: cdn-sync
        image: amazon/aws-cli:latest
        env:
        - name: AWS_DEFAULT_REGION
          value: "us-east-1"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: secret-access-key
        - name: DISTRIBUTION_ID
          value: "E1234567890123"  # Replace with actual CloudFront distribution ID
        volumeMounts:
        - name: build-assets
          mountPath: /app/dist
          readOnly: true
        command:
        - /bin/sh
        - -c
        - |
          while true; do
            echo "Syncing assets to S3..."
            
            # Sync static assets with cache headers
            aws s3 sync /app/dist/ s3://nexustrade-ai-static/ \
              --delete \
              --cache-control "public, max-age=31536000" \
              --exclude "index.html" \
              --exclude "*.html"
            
            # Sync HTML files with no cache
            aws s3 sync /app/dist/ s3://nexustrade-ai-static/ \
              --cache-control "public, max-age=0, must-revalidate" \
              --include "*.html"
            
            # Create CloudFront invalidation for HTML files
            aws cloudfront create-invalidation \
              --distribution-id $DISTRIBUTION_ID \
              --paths "/*.html" "/index.html" \
              || echo "CloudFront invalidation failed"
            
            echo "Asset sync completed"
            sleep 3600  # Sync every hour
          done
      volumes:
      - name: build-assets
        persistentVolumeClaim:
          claimName: build-assets-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: build-assets-pvc
  namespace: nexustrade-ai
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard